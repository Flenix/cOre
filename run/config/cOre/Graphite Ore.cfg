# Configuration file

general {

    "world generation" {
        # if restrictBiomes is true, the ore will only spawn in biomes listed here. A list can be found in the /assets/core/ folder of this mod. 
        # Current setting is just an example as restrictBiomes is off by default. 
        # You can also use numerical biome IDs (which may be more reliable for mods!) 
        # NOTE! Biomes o' Plenty biomes are included but only work with the DEFAULT CONFIG. If you changed their config, use the ID numbers.
        S:allowedBiomes <
            ocean
            desert
            forest
         >

        # A list of dimension IDs which this ore can spawn in. 0 is overworld, -1 is Nether and 1 is The End. 
        # Check relevant mod configs for any other IDs.
        I:allowedDimensions <
            0
         >

        # The maximum size of one vein of ore. MUST BE MORE THAN MINIMUM; NOT EQUAL TO.
        I:maxVeinSize=20

        # The highest point of the world an ore can spawn at. Must be below 255.
        I:maxWorldHeight=120

        # The minimum size of one vein of ore. MUST BE LESS THAN MAXIMUM; NOT EQUAL TO.
        I:minVeinSize=5

        # The lowest point of the world an ore can spawn at. Must be above 0.
        I:minWorldHeight=50

        # Whether to use the allowed biomes whitelist or just generate in all biomes.
        B:restrictBiomes=false

        # The chance each vein has to actually be generated. As a percentage, so 0-100. 
        # Used for rare ores that should be less than one per chunk.
        I:veinSpawnChance=80

        # How many veins of ore will spawn within a 16x16 area.
        I:veinsPerChunk=2

        # Whether to generate this ore in the world naturally at all. 
        # If false, all further generator settings are ignored.
        B:worldGenEnabled=true
    }

    "ore mechanics" {
        B:canFortune=false
        B:canSilkTouch=false
        B:dropPrimaryForFakePlayer=true
        B:dropSecondaryForFakePlayer=false
        I:primaryDropChance=100
        I:primaryDropQtyMax=4
        I:primaryDropQtyMin=3
        S:primaryDroppedItem=core:dust_graphite
        I:secondaryDropChance=0
        I:secondaryDropQtyMax=0
        I:secondaryDropQtyMin=0
        S:secondaryDroppedItem=null
    }

    "ore dictionary" {
        # The Ore Dictionary name used for the in-world ore block (typically oreOrename;. 
        # Leave blank to disable (in case you want to make block forms useless)
        S:oreOreDict=oreGraphite
    }

    "ore properties" {
        I:durability=1
        I:experienceMax=5
        I:experienceMin=2
        I:hardnessBlock=5
        I:hardnessOre=3
        I:harvestLevel=0
        I:meltingPoint=4026
        S:notes <
            
         >
        S:symbol=C
        I:weight=2150
    }

    "ore recipes" {
        I:oreCrusherEnergyUsage=4000
        S:oreCrusherPrimaryOutput=core:dust_graphite
        I:oreCrusherPrimaryOutputAmount=4
        B:oreCrushingEnabled=true
    }

    drops {
        # Whether Fortune enchantments work on this block 
        # (Increasing the total amounts dropped - does not increase drop chance for secondary.)
        B:canFortune=false

        # Whether Silk Touch enchantments works on this block 
        # (Dropping the block itself, instead of any drops listed above)
        B:canSilkTouch=false

        # Whether the primary drop can drop when mined by a fake player (E.G. a quarry)
        B:dropPrimaryForFakePlayer=true

        # Whether the secondary drop can drop when mined by a fake player
        B:dropSecondaryForFakePlayer=false

        # The odds that the primary drop will occur. As a percentage, so 0-100.
        I:primaryDropChance=100

        # The maximum amount that will drop (cannot be higher than the items maximum stack size - usualy 64)
        I:primaryDropQtyMax=4

        # The minimum amount that will drop (Must be 1 or higher;
        I:primaryDropQtyMin=3

        # The unlocalized name of the item which should be dropped (for example, core:ore_copper or minecraft:dye:4 for Lapis Lazuli)
        S:primaryDroppedItem=core:dust_graphite

        # The odds that the secondary drop will occur. As a percentage, so 0-100.
        I:secondaryDropChance=0

        # The maximum amount of the secondary item that will drop
        I:secondaryDropQtyMax=0

        # The minimum amount of the secondary item that will drop
        I:secondaryDropQtyMin=0

        # The unlocalized name of a secondary item which can be dropped (leave blank to disable)
        S:secondaryDroppedItem=null
    }

    properties {
        # An arbitrary value assigned based on material properties such as malleability and ductility as well as brittleness. This affects any tools made when using cOre directly. 
        # NOTE: that means both tools made directly by cOre, and also any mods which REQUIRE core as a dependency!! (Assuming they use this value, which they should.)
        I:durability=1

        # The maximum experience dropped from this block. Disabled with Silk Touchh. 
        # Set to 0 to disable experience drop entirely.
        I:experienceMax=5

        # The minimum experience dropped from this block. Disabled with Silk Touch.
        I:experienceMin=2

        # How hard the refined block is - how long it takes to mine.
        I:hardnessBlock=5

        # How hard the ore block is - how long it takes to mine. All vanilla ores are 3.
        I:hardnessOre=3

        # The tool level required to mine this rock. Vanilla examples are wood 0, stone 1, iron 2 and diamond 3. 
        # Both ore and refined block share this value.
        I:harvestLevel=0

        # The melting point of the pure metal, in celcius.
        I:meltingPoint=4026

        # Any additional notes to be displayed in tooltip. Not used by default.
        # Each entry will be displayed on its own line.
        S:notes <
            
         >

        # The chemical symbol for this material. Not always used.
        S:symbol=C

        # The weight of this metal in purified form, per cubic meter. For real metals this is accurate so probably doesn't need changing but tweak as you see fit.
        I:weight=2150
    }

    recipes {
        # How much energy should the process consume
        I:oreCrusherEnergyUsage=4000

        # The unlocalized name of the primary output (for example, core:dust_impure_copper)
        S:oreCrusherPrimaryOutput=core:dust_graphite

        # The amount of items that should be produced (Modded Minecraft standard is 2 dust for one ore)
        I:oreCrusherPrimaryOutputAmount=4

        # Whether this can be crushed in some sort of crushing machine, to produce (by default) impure dust.
        B:oreCrushingEnabled=true
    }

}


